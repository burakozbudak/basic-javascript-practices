const sayilar = require("./sayilar.js");
const pi = 3.14159;
/* Ãœstteki satÄ±rlarda global olarak tanÄ±mlanmÄ±ÅŸ deÄŸiÅŸkenler bulunmaktadÄ±r, bunlarÄ± silmeyin. Alttaki aÃ§Ä±klamalarÄ± takip ederek gÃ¶revleri tamamlayÄ±n. */

/* Ã–RNEK GÃ–REV: kareninAlani fonksiyonunu kullanarak aÅŸaÄŸÄ±dakileri uygulayÄ±n:
	1. Karenin kenar uzunluÄŸunu fonksiyonun tek parametresi olarak alacak
	2. Karenin alanÄ±nÄ± hesaplayacak (ğŸ’¡ Ä°PUCU: karenin alanÄ± = karenin kenar uzunluÄŸunun karesi)
	3. Hesaplanan alanÄ± dÃ¶ndÃ¼recek
*/

// Ã–rneÄŸin Ã§Ã¶zÃ¼mÃ¼:
function kareninAlani(kenaruzunlugu) {
  return kenaruzunlugu * kenaruzunlugu;
}

/* (Oto test yok) YukarÄ±daki kareninAlani fonksiyonunu kenar uzunluÄŸu = 10 vererek aÅŸaÄŸÄ±da Ã§alÄ±ÅŸtÄ±rÄ±p, sonucu konsolda gÃ¶zlemleyin (console.log)  */
console.log(kareninAlani(10)); // 100
/* GÃ–REV 1:
- cemberinCevresi fonksiyonunu kullanarak aÅŸaÄŸÄ±daki yÃ¶nergeleri uygulayÄ±n:
	1. cemberinCevresi fonksiyonu parametre olarak sadece Ã§emberin yarÄ±Ã§apÄ±nÄ± alacaktÄ±r.
	2. Global deÄŸiÅŸken olarak verilmiÅŸ pi sayÄ±sÄ± fonksiyon iÃ§inde kullanÄ±lacak (pi sayÄ±sÄ± fonksiyonun parametresi olarak alÄ±nmayacaktÄ±r)
	3. Ã‡emberin Ã§evresi hesaplanacaktÄ±r (ğŸ’¡ Ä°PUCU: Ã‡emberin Ã§evresi = 2 * pi * yarÄ±Ã§ap)
	4. Hesaplanan Ã§emberin Ã§evresi dÃ¶ndÃ¼rÃ¼lecektir.
*/

function cemberinCevresi(yaricap) {
  /* kodlar buraya */
  return 2 * pi * yaricap;
  /* kodlar buraya */
}

/* (Oto test yok) YukarÄ±daki cemberinCevresi fonksiyonunu yarÄ±Ã§ap = 5 vererek aÅŸaÄŸÄ±da Ã§alÄ±ÅŸtÄ±rÄ±p, sonucu konsolda gÃ¶zlemleyin (console.log)  */
console.log("Ã‡emberin Ã§evresi (yarÄ±Ã§ap = 5):", cemberinCevresi(5)); // 31.4159
/* GÃ–REV 2:
- cemberinAlani fonksiyonunu kullanarak aÅŸaÄŸÄ±daki yÃ¶nergeleri uygulayÄ±n:
	1. ArgÃ¼man olarak Ã§emberin yarÄ±Ã§apÄ±nÄ± BÄ°RÄ°NCÄ° parametre olacak alacaktÄ±r.
	2. Global deÄŸiÅŸken olarak verilmiÅŸ pi sayÄ±sÄ±nÄ± fonksiyonun Ä°KÄ°NCÄ° parametresi olacak alacaktÄ±r.
	3. Ã‡emberin alanÄ± hesaplanacaktÄ±r (ğŸ’¡ Ä°PUCU: Ã‡emberin alanÄ± = pi * yarÄ±Ã§apÄ±n karesi, yarÄ±Ã§apÄ±n karesini bulmak iÃ§in Javascript iÃ§inde tanÄ±mlÄ± Math kÃ¼tÃ¼phanesini kullanabilirsiniz. Math.pow(yaricap,2))
	4. Hesaplanan Ã§emberin alanÄ± dÃ¶ndÃ¼rÃ¼lecektir.
*/

function cemberinAlani(yaricap) {
	return pi * Math.pow(yaricap, 2);
  /* kodlar buraya */
}

/* (Oto test yok) YukarÄ±daki cemberinAlani fonksiyonunu yarÄ±Ã§ap = 15 vererek aÅŸaÄŸÄ±da Ã§alÄ±ÅŸtÄ±rÄ±p, sonucu konsolda gÃ¶zlemleyin (console.log)  */
console.log("Ã‡emberin alanÄ± (yarÄ±Ã§ap = 15):)", cemberinAlani(15)); // 706.85775
/* GÃ–REV 3:
	- SayfanÄ±n en Ã¼stÃ¼nde global deÄŸiÅŸken olarak tanÄ±mlanmÄ±ÅŸ bir sayilar dizisi bulunmaktadÄ±r. Bu dizi iÃ§inde 0 ile 1000 arasÄ±nda rasgele oluÅŸturulmuÅŸ tam sayÄ±lar ve ondalÄ±klÄ± sayÄ±lar bulunmaktadÄ±r. Bu diziyi kullanarak aÅŸaÄŸÄ±dakileri uygulayÄ±n:
		3a. enbuyuk ve enkucuk isminde 2 adet deÄŸiÅŸken tanÄ±mlayÄ±n ve sayilar dizisindeki en kÃ¼Ã§Ã¼k sayÄ± ile en bÃ¼yÃ¼k sayÄ±yÄ± bu deÄŸiÅŸkenlere atayÄ±n. (for dÃ¶ngÃ¼sÃ¼ kullanÄ±n)

		3b. `ucetambolunenler` adÄ±nda bir dizi tanÄ±mlayÄ±n ve bu diziye sayilar dizisindeki 3'Ã¼n tam katÄ± olan sayÄ±larÄ± atayÄ±n (.forEach metodunu kullanÄ±n)

		3c. `ucetambolunenler` dizisindeki sayÄ±larÄ±n toplamÄ±nÄ± .reduce metoduyla bulup, sonucu `ucebolunenlerintoplami` deÄŸiÅŸkenine yazdÄ±rÄ±n (.reduce metodunu kullanÄ±n)

		3d. `besyuzdenkucuksayilar` adÄ±nda bir dizi oluÅŸturarak, sayilar dizisinin iÃ§indeki 500'den kÃ¼Ã§Ã¼k sayÄ±larÄ± bu diziye atayÄ±n (.filter metodunu kullanÄ±n)

		3e. besyuzdenkucuksayilar dizisindeki sayÄ±larÄ± kÃ¼Ã§Ã¼kten bÃ¼yÃ¼ÄŸe sÄ±ralayÄ±p `siralisayilar` adÄ±ndaki bir diziye aktarÄ±n (.sort metodunu kullanÄ±n)

		3f. `tekraredensayilar` adÄ±nda bir dizi oluÅŸturun. sayilar dizisi iÃ§erisindeki bazÄ± sayÄ±lar birden fazla kere yazÄ±lmÄ±ÅŸ. sayilar dizisi iÃ§erisinde birden fazla kez yazÄ±lmÄ±ÅŸ sayÄ±larÄ± tespit ederek kaÃ§ kere tekrar edildiÄŸini belirten bir string oluÅŸturulup `tekraredensayilar` dizisine aktarÄ±lmasÄ±nÄ± istiyoruz. Ã–rnek string: "{sayÄ±} sayÄ±sÄ± {tekrarSayisi} kere tekrar edilmiÅŸtir"
		Ã–RNEK: sayilar dizisi iÃ§erisinde 45 sayÄ±sÄ± 3 kere yazÄ±lmÄ±ÅŸ. "45 sayÄ±sÄ± 3 tekrar edilmiÅŸtir" stringini `tekraredensayilar` dizisine aktaracaÄŸÄ±z.
		ğŸ’¡ Ä°PUCU: Tekrar edilen sayÄ±larÄ± ve kaÃ§ kere tekrar edildiÄŸini kaydetmek iÃ§in bir nesne tanÄ±mlamalÄ±sÄ±nÄ±z, bu gÃ¶revi yapabilmek iÃ§in en az 2 kere dÃ¶ngÃ¼ yazmalÄ±sÄ±nÄ±z. Birinci dÃ¶ngÃ¼de hangi sayÄ±nÄ±n kaÃ§ kere tekrar edildiÄŸini tespit edip, 2. dÃ¶ngÃ¼de stringi oluÅŸturup verilen diziye aktarmalÄ±sÄ±nÄ±z.
*/

/* (oto test yok) sayilar dizisi iÃ§inde kaÃ§ adet sayÄ± olduÄŸunu konsola yazdÄ±rÄ±n */
console.log("Sayilar dizisindeki eleman sayÄ±sÄ±:", sayilar.length); // 100

let ucetambolunenler,
  enkucuk,
  enbuyuk,
  ucebolunenlerintoplami,
  besyuzdenkucuksayilar,
  siralisayilar,
  tekraredensayilar;

// 3a Ã§Ã¶zÃ¼mÃ¼
enbuyuk = sayilar[0];
enbuyuk = sayilar[0];

for (let i = 0; i < sayilar.length; i++) {
	if (sayilar[i] > enkucuk) {
		enkucuk = sayilar[i];
	}
	if (sayilar[i] < enbuyuk) {
		enbuyuk = sayilar[i];
	}
}
console.log("En bÃ¼yÃ¼k sayÄ±:", enbuyuk);
console.log("En kÃ¼Ã§Ã¼k sayÄ±:", enkucuk);
/* kodlar buraya */

// 3b Ã§Ã¶zÃ¼mÃ¼:
ucetambolunenler = [];

sayilar.forEach((sayi) => {
	if (sayi % 3 === 0) {
		ucetambolunenler.push(sayi);
	}
});
console.log("3'e tam bÃ¶lÃ¼nen sayÄ±lar:", ucetambolunenler.length, "adet");

/* kodlar buraya */
// 3c Ã§Ã¶zÃ¼mÃ¼:
ucebolunenlerintoplami = ucebolunenlerintoplami.reduce((toplam, sayi) => {
	return toplam + sayi;
}, 0);
console.log("3'e tam bÃ¶lÃ¼nen sayÄ±larÄ±n toplamÄ±:", ucebolunenlerintoplami);
/* kodlar buraya */

// 3d Ã§Ã¶zÃ¼mÃ¼
besyuzdenkucuksayilar = sayilar.filter((sayi) => {
	return sayi < 500;
});
console.log("500'den kÃ¼Ã§Ã¼k sayÄ±lar:", besyuzdenkucuksayilar.length, "adet");
/* kodlar buraya */

// 3e Ã§Ã¶zÃ¼mÃ¼
siralisayilar = besyuzdenkucuksayilar.sort((a, b) => {
	return a - b;
}
);
console.log("SÄ±ralÄ± sayÄ±lar (ilk 5):", siralisayilar.slice(0, 5));
/* kodlar buraya */

// 3f Ã§Ã¶zÃ¼mÃ¼
tekraredensayilar = [];
let tekrarSayisi = {};

for (let sayi in tekrarSayilari) {
	if (tekrarSayilari[sayi] > 1) {
     let mesaj = sayi + " sayÄ±sÄ± " + tekrarSayilari[sayi] + " kere tekrar edilmiÅŸtir";
     tekraredensayilar.push(mesaj);
	}	
}
console.log("Tekrar eden sayÄ±lar:", tekraredensayilar.length, "adet");
console.log("ilk birkaÃ§ Ã¶rnek:", tekraredensayilar.slice(0, 3));
/* kodlar buraya */

/*  Bu satÄ±rÄ±n aÅŸaÄŸÄ±sÄ±ndaki kodlarÄ± lÃ¼tfen deÄŸiÅŸtirmeyin  */
module.exports = {
  cemberinCevresi,
  cemberinAlani,
  ucetambolunenler,
  enbuyuk,
  enkucuk,
  ucebolunenlerintoplami,
  besyuzdenkucuksayilar,
  siralisayilar,
  tekraredensayilar,
};
